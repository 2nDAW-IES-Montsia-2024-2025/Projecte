name: 🐳 Docker CI/CD

on: [push]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  # Build and test the Docker image
  tests:
    name: 🧪 Tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3

      - name: 📦 Cache Docker layers
        uses: actions/cache@v4
        with:
          path: tmp-cache
          key: ${{ runner.os }}-docker-${{ hashFiles('**/Dockerfile') }}

      - name: 📦 Load cache
        uses: reproducible-containers/buildkit-cache-dance@5b6db76d1da5c8b307d5d2e0706d266521b710de
        with:
          cache-source: tmp-cache
          cache-target: /tmp/cache
          skip-extraction: ${{ steps.cache.outputs.cache-hit }}

      - name: 🏗️ Build test stage
        uses: docker/build-push-action@4f58ea79222b3b9dc2c8bbdd6debcef730109a75
        with:
          target: test
          load: true

  # Build and push the final image
  push:
    name: 🚀 Publish image
    runs-on: ubuntu-latest
    needs: tests
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        id: meta
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: 🪪 Log in to the Container registry
        uses: docker/login-action@7ca345011ac4304463197fac0e56eab1bc7e6af0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 📦 Cache Docker layers
        uses: actions/cache@v4
        with:
          path: tmp-cache
          key: ${{ runner.os }}-docker-${{ hashFiles('**/Dockerfile') }}

      - name: 📦 Load cache
        uses: reproducible-containers/buildkit-cache-dance@5b6db76d1da5c8b307d5d2e0706d266521b710de
        with:
          cache-source: tmp-cache
          cache-target: /tmp/cache
          skip-extraction: ${{ steps.cache.outputs.cache-hit }}

      - name: 🏗️ Build final stage and release it!
        id: push
        uses: docker/build-push-action@4f58ea79222b3b9dc2c8bbdd6debcef730109a75
        with:
          target: final
          push: true
          annotations: ${{ steps.meta.outputs.annotations }}
          labels: ${{ steps.meta.outputs.labels }}
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: 📎 Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
