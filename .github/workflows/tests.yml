name: 🧪 Tests

run-name: 🧪 Running tests for ${{ join(fromJSON(inputs.images), ', ') }}

on:
  workflow_call:
    inputs:
      environment:
        default: test
        type: string
      images:
        default: '["all"]'
        type: string
    outputs:
      environment:
        value: ${{ inputs.environment }}

env:
  APP_ENV: ${{ inputs.environment }}

jobs:
  urbantree:
    name: 🧪 UrbanTree
    runs-on: ubuntu-latest
    if: ${{ contains(inputs.images, 'all') || contains(fromJSON(inputs.images), 'urbantree') }}
    defaults:
      run:
        shell: bash
        working-directory: app
    steps:
      # https://github.com/actions/checkout/tree/11bd71901bbe5b1630ceea73d27597364c9af683
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

      # https://github.com/actions/cache/tree/6849a6489940f00c2f30c0fb92c6274307ccb58a
      - name: 📦 Cache Composer dependencies
        uses: actions/cache@6849a6489940f00c2f30c0fb92c6274307ccb58a
        with:
          path: /tmp/composer-cache
          key: ${{ runner.os }}-${{ hashFiles('**/composer.lock') }}

      # https://github.com/shivammathur/setup-php/tree/c541c155eee45413f5b09a52248675b1a2575231
      - name: 🐘 Setup PHP with extensions
        uses: shivammathur/setup-php@c541c155eee45413f5b09a52248675b1a2575231
        with:
          php-version: 8.4
          coverage: xdebug
          extensions: none, ctype, curl, dom, json, libxml, mbstring, pdo, phar, tokenizer, xml, xmlwriter
          ini-values: zend.assertions=1, error_reporting=-1, log_errors_max_len=0, display_errors=On
          tools: none

      # https://github.com/php-actions/composer/tree/8a65f0d3c6a1d17ca4800491a40b5756a4c164f3
      - name: 📦 Install Composer dependencies
        uses: php-actions/composer@8a65f0d3c6a1d17ca4800491a40b5756a4c164f3
        with:
          working_dir: app

      - name: 🧪 Run PHPUnit tests with coverage
        run: ./vendor/bin/phpunit --log-junit junit.xml --coverage-text=_coverage/coverage.txt --coverage-clover=_coverage/clover.xml

      # https://github.com/actions/upload-artifact/tree/b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882
      - name: 📤 Upload coverage data
        uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882
        with:
          name: urbantree-coverage
          path: |
            app/_coverage
            app/junit.xml
          retention-days: 1

  api:
    name: 🧪 API
    runs-on: ubuntu-latest
    if: ${{ contains(inputs.images, 'all') || contains(fromJSON(inputs.images), 'api') }}
    defaults:
      run:
        shell: bash
        working-directory: api
    steps:
      # https://github.com/actions/checkout/tree/11bd71901bbe5b1630ceea73d27597364c9af683
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

      # https://github.com/actions/cache/tree/6849a6489940f00c2f30c0fb92c6274307ccb58a
      - name: 📦 Cache Python dependencies
        uses: actions/cache@6849a6489940f00c2f30c0fb92c6274307ccb58a
        with:
          path: /root/.cache/pip
          key: ${{ runner.os }}-${{ hashFiles('**/requirements.txt', '**/requirements-dev.txt') }}

      # https://github.com/actions/setup-python/tree/0b93645e9fea7318ecaed2b359559ac225c90a2b
      - name: 🐍 Setup Python
        uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b
        with:
          python-version: "3.13.0"

      - name: 📦 Install Python dependencies
        run: pip install -r requirements-dev.txt

      - name: 🧪 Run Python tests with coverage
        run: pytest tests --cov=./src --cov-report= --junitxml=junit.xml

      # https://github.com/actions/upload-artifact/tree/b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882
      - name: 📤 Upload coverage data
        uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882
        with:
          name: api-coverage
          path: |
            api/coverage.xml
            api/junit.xml
          retention-days: 1
