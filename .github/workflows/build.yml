name: üèóÔ∏è Build

run-name: üê≥ Building Docker images

on:
  workflow_call:
    inputs:
      images:
        default: '["all"]'
        type: string
      version:
        type: string

env:
  REGISTRY: ghcr.io

jobs:
  build:
    name: üê≥ Docker
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      # https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/running-variations-of-jobs-in-a-workflow#example-adding-configurations
      matrix:
        image: ${{ fromJSON(inputs.images) }}
        exclude:
          - image: all
        include:
          - image: urbantree
            context: ./app
          - image: api
            context: ./api

    steps:
      # https://github.com/actions/checkout/tree/11bd71901bbe5b1630ceea73d27597364c9af683
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

      # https://github.com/docker/setup-buildx-action/tree/c47758b77c9736f4b2ef4073d4d51994fabfe349
      - uses: docker/setup-buildx-action@c47758b77c9736f4b2ef4073d4d51994fabfe349

      # https://github.com/sigstore/cosign-installer/tree/dc72c7d5c4d10cd6bcb8cf6e3fd625a9e5e537da
      - uses: sigstore/cosign-installer@dc72c7d5c4d10cd6bcb8cf6e3fd625a9e5e537da
        if: inputs.version
        with:
          cosign-release: "v2.2.4"

      # https://github.com/docker/login-action/tree/7ca345011ac4304463197fac0e56eab1bc7e6af0
      - name: ü™™ Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@7ca345011ac4304463197fac0e56eab1bc7e6af0
        if: inputs.version
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ github.token }}

      # https://github.com/docker/metadata-action/tree/b53be03109c4ef6f6cc7aa545b84b17a7fe51c1e
      - uses: docker/metadata-action@b53be03109c4ef6f6cc7aa545b84b17a7fe51c1e
        id: meta
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ matrix.image }}
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}},value=${{ inputs.version }}
            type=semver,pattern={{major}}.{{minor}},value=${{ inputs.version }}
        env:
          DOCKER_METADATA_ANNOTATIONS_LEVELS: manifest,manifest-descriptor,index,index-descriptor

      # https://github.com/actions/cache/tree/6849a6489940f00c2f30c0fb92c6274307ccb58a
      - name: üì¶ Cache Docker layers
        uses: actions/cache@6849a6489940f00c2f30c0fb92c6274307ccb58a
        id: cache
        with:
          path: |
            composer-cache
            python-cache
          key: ${{ runner.os }}-docker-${{ hashFiles('**/Dockerfile') }}

      # https://github.com/reproducible-containers/buildkit-cache-dance/tree/5b6db76d1da5c8b307d5d2e0706d266521b710de
      - name: üì¶ Load cache
        uses: reproducible-containers/buildkit-cache-dance@5b6db76d1da5c8b307d5d2e0706d266521b710de
        with:
          cache-map: |
            {
              "composer-cache": "/tmp/cache",
              "python-cache": "/root/.cache/pip"
            }
          skip-extraction: ${{ steps.cache.outputs.cache-hit }}

      # https://github.com/docker/build-push-action/tree/48aba3b46d1b1fec4febb7c5d0c644b249a11355
      - name: üèóÔ∏è Build test stage
        uses: docker/build-push-action@48aba3b46d1b1fec4febb7c5d0c644b249a11355
        id: build-test
        with:
          load: true
          context: ${{ matrix.context }}
          target: test
          cache-from: type=gha
          cache-to: type=gha,mode=max
        env:
          APP_ENV: test

      - name: üß™ Run tests
        run: docker run --rm -v "$(pwd)/reports/${{ matrix.image }}:/reports" ${{ steps.build-test.outputs.imageid }}

      # https://github.com/actions/upload-artifact/tree/b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882
      - name: üì§ Upload coverage data
        uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882
        if: ${{ !cancelled() }}
        with:
          name: ${{ matrix.image }}-coverage
          path: reports/${{ matrix.image }}
          retention-days: 1

      # https://github.com/docker/build-push-action/tree/48aba3b46d1b1fec4febb7c5d0c644b249a11355
      - name: üèóÔ∏è Build final stage ${{ inputs.version && 'and push to registry' }}
        uses: docker/build-push-action@48aba3b46d1b1fec4febb7c5d0c644b249a11355
        id: build-and-push
        with:
          build-args: |
            IMAGE_VERSION=${{ inputs.version }}
          context: ${{ matrix.context }}
          push: ${{ !!inputs.version }}
          target: final
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          annotations: ${{ steps.meta.outputs.annotations }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Sign the resulting Docker image digest except on PRs.
      # This will only write to the public Rekor transparency log when the Docker
      # repository is public to avoid leaking data.  If you would like to publish
      # transparency data even for private images, pass --force to cosign below.
      # https://github.com/sigstore/cosign
      - name: üñãÔ∏è Sign the published Docker image
        if: inputs.version
        env:
          # https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-an-intermediate-environment-variable
          TAGS: ${{ steps.meta.outputs.tags }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}

      # https://github.com/actions/attest-build-provenance/tree/619dbb2e03e0189af0c55118e7d3c5e129e99726
      - name: üìù Attest the build provenance
        uses: actions/attest-build-provenance@619dbb2e03e0189af0c55118e7d3c5e129e99726
        if: inputs.version
        with:
          subject-name: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ matrix.image }}
          subject-digest: ${{ steps.build-and-push.outputs.digest }}
          push-to-registry: true
