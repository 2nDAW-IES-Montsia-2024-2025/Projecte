#
# This file defines the services that make up the application
# Each service is a container that runs a single process
# Each container is built from an image, according to the Dockerfile specified in the build section
# For more information, see: https://docs.docker.com/reference/compose-file/
#

services:
  server:
    build:
      context: .
      target: development
    ports:
      - 8000:80
    networks:
      - app-network
    depends_on:
      database:
        condition: service_healthy
    secrets:
      - database-password
    volumes:
      - storage-data:/var/www/html/storage
    environment:
      - APP_NAME=${APP_NAME}
      - DB_HOST=${DB_HOST:-database}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER:-root}
      - DB_PASS_FILE_PATH=/run/secrets/database-password
      - LOG_FILE_PATH=/var/www/html/storage/logs/app.log
    develop:
      watch:
        - action: sync
          path: ./src
          target: /var/www/html

  database:
    build:
      context: .
      target: database
    restart: always
    user: root
    secrets:
      - database-password
    ports:
      - 1000:3306
    networks:
      - app-network
    # This will store the database in memory, so it will be lost when the container is stopped
    tmpfs:
      - /var/lib/mysql
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/database-password
    healthcheck:
      test:
        [
          "CMD",
          "/usr/local/bin/healthcheck.sh",
          "--su-mysql",
          "--connect",
          "--innodb_initialized",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
    develop:
      watch:
        - action: rebuild
          path: ./database

  phpmyadmin:
    image: phpmyadmin:latest
    ports:
      - 8080:80
    networks:
      - app-network
    depends_on:
      database:
        condition: service_healthy
    environment:
      PMA_HOST: database

networks:
  app-network:
    driver: bridge

volumes:
  database-data:
  storage-data:

secrets:
  database-password:
    environment: DB_PASS
